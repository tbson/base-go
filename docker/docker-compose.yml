services:
    basecode_db:
        container_name: basecode_db
        image: 'postgres:16.4-alpine3.20'
        environment:
            PGUSER: ${POSTGRES_USER}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - '${POSTGRES_EXPOSE_PORT}:${POSTGRES_PORT}'
        volumes:
            # - ./volumes/db/sql/ext.sql:/docker-entrypoint-initdb.d/ext.sql
            - ./volumes/db/dbdata:/var/lib/postgresql/data/:delegated
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 18

    basecode_db_atlas:
        container_name: basecode_db_atlas
        image: 'postgres:16.4-alpine3.20'
        environment:
            PGUSER: ${POSTGRES_USER}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}

    basecode_backend:
        container_name: basecode_backend
        build:
            context: ../backend
            dockerfile: ../docker/dockerfiles/backend
        volumes:
            - ../backend:/code:delegated
        environment:
            GOPATH: /code/
            SECRET_KEY: ${SECRET_KEY}
            TIME_ZONE: ${TIME_ZONE}
            DEBUG: ${DEBUG}

            APP_TITLE: ${APP_TITLE}
            APP_DESCRTIPTION: ${APP_DESCRTIPTION}

            PORT: ${PORT}
            PROTOCOL: ${PROTOCOL}
            DOMAIN: ${DOMAIN}
            BASE_URL: '${PROTOCOL}://${DOMAIN}'

            DB_HOST: ${POSTGRES_HOST}
            DB_PORT: ${POSTGRES_PORT}
            DB_USER: ${POSTGRES_USER}
            DB_NAME: ${POSTGRES_DB}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_URL: 'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable'
            DB_URL_ATLAS: 'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST_ATLAS}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable'

            EMAIL_ENABLE: ${EMAIL_ENABLE}
            EMAIL_DOMAIN: ${EMAIL_DOMAIN}
            EMAIL_HOST: ${EMAIL_HOST}
            EMAIL_PORT: ${EMAIL_PORT}
            EMAIL_HOST_USER: ${EMAIL_HOST_USER}
            EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
            EMAIL_USE_TLS: ${EMAIL_USE_TLS}

            KEYCLOAK_URL: ${KEYCLOAK_URL}
            KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
            KEYCLOAK_DEFAULT_REALM: ${KEYCLOAK_DEFAULT_REALM}
            KEYCLOAK_DEFAULT_CLIENT_ID: ${KEYCLOAK_DEFAULT_CLIENT_ID}
            KEYCLOAK_DEFAULT_CLIENT_SECRET: ${KEYCLOAK_DEFAULT_CLIENT_SECRET}
            KEYCLOAK_DEFAULT_REDIRECT_URI: ${KEYCLOAK_DEFAULT_REDIRECT_URI}
            KEYCLOAK_DEFAULT_POST_LOGOUT_URI: ${KEYCLOAK_DEFAULT_POST_LOGOUT_URI}
        ports:
            - '4000:4000'
        depends_on:
            basecode_db:
                condition: service_healthy
        tty: ${DOCKER_TTY}
        command: ${DOCKER_COMMAND}

    basecode_frontend:
        container_name: basecode_frontend
        build:
            context: ../frontend
            dockerfile: ../docker/dockerfiles/frontend
        volumes:
            - ../frontend:/code:delegated
            - /code/node_modules
        ports:
            - '3000:3000'
        tty: ${DOCKER_TTY}

    basecode_nginx:
        container_name: basecode_nginx
        build:
            context: ./
            dockerfile: ./dockerfiles/nginx
        restart: always
        volumes:
            - ./volumes/nginx/conf:/etc/nginx/conf.d
            - ${SSL_PATH}:/resource/ssl
            - ../backend/public/:/resource/public
        ports:
            - '443:443'
        depends_on:
            - basecode_backend

    basecode_keycloak_db:
        container_name: basecode_keycloak_db 
        image: 'postgres:16.4-alpine3.20'
        environment:
            PGUSER: ${POSTGRES_USER}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - ./volumes/keycloak/dbdata:/var/lib/postgresql/data/:delegated

    basecode_keycloak:
        image: docker.io/bitnami/keycloak:latest
        ports:
            - '8080:8080'
        environment:
            KEYCLOAK_CREATE_ADMIN_USER: true
            KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

            KEYCLOAK_DATABASE_HOST: basecode_keycloak_db
            KEYCLOAK_DATABASE_PORT: 5432
            KEYCLOAK_DATABASE_USER: ${POSTGRES_USER}
            KEYCLOAK_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
            KEYCLOAK_DATABASE_NAME: ${POSTGRES_DB}
        depends_on:
            - basecode_keycloak_db
        volumes:
            - './volumes/keycloak/theme:/opt/bitnami/keycloak/themes/mynewtheme'
